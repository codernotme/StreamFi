services:
  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
      - nms
    networks:
      - streamfi-net

  # MongoDB (development)
  mongo:
    image: mongo:6.0
    volumes:
      - mongo-data:/data/db
    networks:
      - streamfi-net

  # Node Media Server
  nms:
    build:
      # NOTE: Previously this used ${MEDIA_SERVER_CONTEXT:-./media-server} but the actual path in the repo
      # is ./packages/media-server. Hardcoding prevents build failures for new contributors who
      # don't export MEDIA_SERVER_CONTEXT. If you really need to override, edit this file or add
      # a secondary compose override (docker-compose.override.yml).
      context: ./packages/media-server
      dockerfile: Dockerfilegit 
    ports:
      - "1935:1935"   # RTMP ingest
      - "8081:8080"   # HLS HTTP (external:internal)
    env_file:
      - ./packages/media-server/.env   # keep NMS-specific envs here
    networks:
      - streamfi-net

  # Backend Service
  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./packages/backend/.env
    environment:
      DATABASE_URL: ${DATABASE_URL:-mongodb://mongo:27017/streamfi}
      MONGO_DB_NAME: ${MONGO_DB_NAME:-streamfi}
      CSRF_SECURE: "false"
    depends_on:
      - mongo
      - nms
    networks:
      - streamfi-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Frontend Service
  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_BASE: "/api"
        NEXT_PUBLIC_HLS_BASE: "http://localhost:8081"
        NEXT_PUBLIC_CHAT_WS_BASE: "/socket.io"
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    env_file:
      - ./packages/frontend/.env.local
    environment:
      BACKEND_URL: "http://backend:8000"
    networks:
      - streamfi-net

networks:
  streamfi-net:
    driver: bridge

volumes:
  mongo-data:
