services:
  # MongoDB (development)
  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - streamfi-net

  # Node Media Server
  nms:
    build:
      context: ./packages/media-server
      dockerfile: Dockerfile
    ports:
      - "1935:1935"   # RTMP ingest
      - "8081:8080"   # HLS HTTP (external:internal)
    env_file:
      - ./packages/media-server/.env   # keep NMS-specific envs here
    networks:
      - streamfi-net

  # Backend Service
  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./packages/backend/.env
    environment:
      # Fallback local Mongo if not provided in env_file
      DATABASE_URL: ${DATABASE_URL:-mongodb://mongo:27017/streamfi}
      MONGO_DB_NAME: ${MONGO_DB_NAME:-streamfi}
      CSRF_SECURE: "false"
    depends_on:
      - mongo
      - nms
    networks:
      - streamfi-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Frontend Service
  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_BASE: "/api"
        NEXT_PUBLIC_HLS_BASE: "http://localhost:8081"
        NEXT_PUBLIC_CHAT_WS_BASE: "/socket.io"
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    env_file:
      - ./packages/frontend/.env.local
    environment:
      BACKEND_URL: "http://backend:8000"
    networks:
      - streamfi-net

networks:
  streamfi-net:
    driver: bridge

volumes:
  mongo-data:
