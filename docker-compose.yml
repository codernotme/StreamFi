# StreamFi/docker-compose.yml

services:
  # Database Service (moved first for dependency order)
  db:
    image: postgres:14-alpine
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: streamfi
    networks:
      - streamfi-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d streamfi"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node Media Server
  nms:
    build:
      context: ./packages/media-server
      dockerfile: Dockerfile
    ports:
      - "1935:1935"   # RTMP ingest
      - "8081:8080"   # HLS HTTP (host:container)
    environment:
      API_BASE: "http://backend:8000/api"
    networks:
      - streamfi-net

  # Backend Service
  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
      - "5555:5555"  # Prisma Studio port
    env_file:
      - ./packages/backend/.env
    depends_on:
      db:
        condition: service_healthy
      nms:
        condition: service_started
    environment:
      DATABASE_URL: "postgresql://user:password@db:5432/streamfi?schema=public"
      NMS_RTMP_URL: "rtmp://nms:1935/live"
      NMS_HLS_BASE: "http://localhost:8081"  # External access URL
      NMS_HLS_TEMPLATE: "/live/{key}/index.m3u8"
      JWT_SECRET: "dev-secret"
      JSON_RPC_PROVIDER: "https://rpc.ankr.com/eth_sepolia"
      CREATOR_VAULT_ADDRESS: "0x0000000000000000000000000000000000000000"
      ADMIN_PRIVATE_KEY: "0x1111111111111111111111111111111111111111111111111111111111111111"
      YELLOW_API_KEY: "test"
      NODE_ENV: "development"
    networks:
      - streamfi-net

  # Frontend Service
  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_BASE: "http://localhost:8000/api"  # External access URL
        NEXT_PUBLIC_HLS_BASE: "http://localhost:8081"
        NEXT_PUBLIC_CHAT_WS_BASE: "ws://localhost:8000"
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_started
    environment:
      # Override build args with runtime environment for client-side access
      NEXT_PUBLIC_API_BASE: "http://localhost:8000/api"
      NEXT_PUBLIC_HLS_BASE: "http://localhost:8081"
      NEXT_PUBLIC_CHAT_WS_BASE: "ws://localhost:8000"
      NODE_ENV: "development"
    networks:
      - streamfi-net

networks:
  streamfi-net:
    driver: bridge

volumes:
  postgres_data:
